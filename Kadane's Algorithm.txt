/* #include<iostream>
using namespace std;

int maxSumSubArray(int a[5]){
    int maxsum = 0;
    int currsum = 0;
    
    for(int i=0;i<a.length;i++){
        currsum = currsum + a[i];
        
        if(currsum > maxsum){
            maxsum = currsum;
        }
        if(currsum < 0){
            currsum = 0;
        }
    }
    return maxsum;
    
}

int main(){
    
    int a[5] = {1,-2,3,4,2};
    
      int max_sum = maxSumSubArray(a);
    cout << "Maximum contiguous sum is " << maxsum;
    return 0;
    
}
*/






#include<iostream>
using namespace std;

int maxSubArraySum(int a[], int size)
{
int maxsum = a[0];
int currsum = a[0];

for(int i=1;i<size;i++)
{
    currsum = max(a[i], currsum+a[i]);
    maxsum = max(maxsum, currsum);
}
return maxsum;
}

/* Driver program to test maxSubArraySum */
int main()
{
int a[] = {7,5,4,-1,10,-11};
int n = sizeof(a)/sizeof(a[0]);
int max_sum = maxSubArraySum(a, n);
cout << "Maximum contiguous sum is " << max_sum;
return 0;
}
